{
  "address": "0x317714DFE0fA635F56626a338d16d2eE5c312489",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawnFunds",
          "type": "uint256"
        }
      ],
      "name": "FundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        }
      ],
      "name": "ProjectCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalAmountNeeded",
          "type": "uint256"
        }
      ],
      "name": "ProjectCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "funder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "funds",
          "type": "uint256"
        }
      ],
      "name": "ProjectFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        }
      ],
      "name": "ProjectFunding",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        }
      ],
      "name": "ProjectStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stageCompleted",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "ReviewerVoted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "reviewer",
          "type": "address"
        }
      ],
      "name": "ReviwerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stageCompleted",
          "type": "uint256"
        }
      ],
      "name": "StageCompleted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        }
      ],
      "name": "addReviewer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "stagesCost",
          "type": "uint256[]"
        },
        {
          "internalType": "address payable",
          "name": "projectOwner",
          "type": "address"
        }
      ],
      "name": "createProject",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        }
      ],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "fundsSent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "projects",
      "outputs": [
        {
          "internalType": "enum Seedifyuba.State",
          "name": "state",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "currentStage",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "missingAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "completedStage",
          "type": "uint256"
        }
      ],
      "name": "setCompletedStage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fundsToWithdraw",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        }
      ],
      "name": "withdrawAllFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc6f79b988b5461c493b162297c68ba274a945658280264d80cd5ca3039ef7017",
  "receipt": {
    "to": null,
    "from": "0xA6c0663e8C7df32130cebf5C4de21ab93A97dEe6",
    "contractAddress": "0x317714DFE0fA635F56626a338d16d2eE5c312489",
    "transactionIndex": 0,
    "gasUsed": "1340021",
    "logsBloom": "0x
    "blockHash": "0x0424c425e9d549323e827ac2643c5ae4032766fbae6529a30d195176968de180",
    "transactionHash": "0xc6f79b988b5461c493b162297c68ba274a945658280264d80cd5ca3039ef7017",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 25866397,
        "transactionHash": "0xc6f79b988b5461c493b162297c68ba274a945658280264d80cd5ca3039ef7017",
        "address": "0x317714DFE0fA635F56626a338d16d2eE5c312489",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000a6c0663e8c7df32130cebf5c4de21ab93a97dee6"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x0424c425e9d549323e827ac2643c5ae4032766fbae6529a30d195176968de180"
      }
    ],
    "blockNumber": 25866397,
    "cumulativeGasUsed": "1340021",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "89c36adc3579bd0b69a0ae80d83aeb7f",
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawnFunds\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"ProjectCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmountNeeded\",\"type\":\"uint256\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"funds\",\"type\":\"uint256\"}],\"name\":\"ProjectFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"ProjectFunding\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"ProjectStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stageCompleted\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"ReviewerVoted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reviewer\",\"type\":\"address\"}],\"name\":\"ReviwerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stageCompleted\",\"type\":\"uint256\"}],\"name\":\"StageCompleted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"addReviewer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"stagesCost\",\"type\":\"uint256[]\"},{\"internalType\":\"address payable\",\"name\":\"projectOwner\",\"type\":\"address\"}],\"name\":\"createProject\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fundsSent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"enum Seedifyuba.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"currentStage\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"missingAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"completedStage\",\"type\":\"uint256\"}],\"name\":\"setCompletedStage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundsToWithdraw\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"withdrawAllFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Taller de programacion 2 - FIUBA - Ayudantes\",\"details\":\"This is an academic contract made for didactic purposes. DO NOT USE THIS IN PRODUCTION\",\"events\":{\"FundsWithdrawn(uint256,address,uint256)\":{\"params\":{\"projectId\":\"Identifier of the project that had its funds withdrawn\",\"withdrawer\":\"Funder that withdraw its funds\",\"withdrawnFunds\":\"Amount of withdrawn funds\"}},\"ProjectCompleted(uint256)\":{\"params\":{\"projectId\":\"Identifier of the project that was completed\"}},\"ProjectCreated(uint256,address,uint256)\":{\"params\":{\"owner\":\"Receiver of the funds once the project is in progress\",\"projectId\":\"Identifier of the newly created project\",\"totalAmountNeeded\":\"Amount of funds needed to complete the project\"}},\"ProjectFunded(uint256,address,uint256)\":{\"params\":{\"funder\":\"Address that sent the funds\",\"funds\":\"Amount of funds sent\",\"projectId\":\"Identifier of the project that was funded\"}},\"ProjectFunding(uint256)\":{\"params\":{\"projectId\":\"Identifier of the funding project\"}},\"ProjectStarted(uint256)\":{\"params\":{\"projectId\":\"Identifier of the project that started\"}},\"ReviewerVoted(uint256,uint256,address)\":{\"params\":{\"projectId\":\"Identifier of the project that progressed\",\"stageCompleted\":\"Index of the stage completed(indexed from 0)\"}},\"ReviwerAdded(uint256,address)\":{\"params\":{\"projectId\":\"Identifier of the newly created project\",\"reviewer\":\"Address of the reviwer\"}},\"StageCompleted(uint256,uint256)\":{\"params\":{\"projectId\":\"Identifier of the project that progressed\",\"stageCompleted\":\"Index of the stage completed(indexed from 0)\"}}},\"kind\":\"dev\",\"methods\":{\"addReviewer(uint256)\":{\"details\":\"Modifies reviewers array.\",\"params\":{\"projectId\":\"Id of the project\"}},\"createProject(uint256[],address)\":{\"details\":\"Creates and stores the project in the projects mapping, the for loops and the array makes the cost of this function to grow linearly with the input, though that does only affect this transaction and not any other. If you want to enable larger projects you should paginate this, not necessary ATM\",\"params\":{\"projectOwner\":\"The owner of the project, should be an address that is able to receive payments as it will receive the funds of the project\",\"stagesCost\":\"Array that represents the cost of each stage of the project, must have a positive length and the sum of it will be the total cost of the project\"},\"returns\":{\"_0\":\"Id that identifies the newly created project\"}},\"fund(uint256)\":{\"params\":{\"projectId\":\"Should be an existing projectId, will revert otherwise\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setCompletedStage(uint256,uint256)\":{\"details\":\"If too many stages are completed in the same transaction, this could lead to a block gaslimit blockage. However this should not be a problem in most cases, but if it becomes a problem, sequential calls can be made to make the project progress in smaller steps\",\"params\":{\"completedStage\":\"Should be a stage number that was not considered completed and smaller or equal to the last stage index(indexed from 0)\",\"projectId\":\"Should be an existing projectId, will revert otherwise\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256,uint256)\":{\"params\":{\"fundsToWithdraw\":\"Amount of funds to withdrawn, should be greater than 0(reverts otherwise)\",\"projectId\":\"Project that you want to withdraw the funds from\"}},\"withdrawAllFunds(uint256)\":{\"params\":{\"projectId\":\"Project that you want to withdraw the funds from\"}}},\"title\":\"Seedifyuba Contract\",\"version\":1},\"userdoc\":{\"events\":{\"FundsWithdrawn(uint256,address,uint256)\":{\"notice\":\"Event emitted when a funder withdraws the funds sent to a project\"},\"ProjectCompleted(uint256)\":{\"notice\":\"Event emitted when a project completes, i.e. the last stage is completed\"},\"ProjectCreated(uint256,address,uint256)\":{\"notice\":\"Event emitted when a project is created\"},\"ProjectFunded(uint256,address,uint256)\":{\"notice\":\"Event emitted when a user sends funds to a project\"},\"ProjectFunding(uint256)\":{\"notice\":\"Event emitted when a project has received all reviwers.\"},\"ProjectStarted(uint256)\":{\"notice\":\"Event emitted when a project starts, i.e. all the necessary funds were received\"},\"ReviewerVoted(uint256,uint256,address)\":{\"notice\":\"Event emitted when a stage is completed in a project\"},\"ReviwerAdded(uint256,address)\":{\"notice\":\"Event emitted when a reviwer is added to the project\"},\"StageCompleted(uint256,uint256)\":{\"notice\":\"Event emitted when a stage is completed in a project\"}},\"kind\":\"user\",\"methods\":{\"addReviewer(uint256)\":{\"notice\":\"Adds a reviwer for an existing project, it can be called by anyone except project owner. Emits an ReviewerAdded event\"},\"createProject(uint256[],address)\":{\"notice\":\"Creates a new project with the given parameters, can only be called by the owner of the contract, so no ill-wicked projects are created Emits an ProjectCreated event\"},\"fund(uint256)\":{\"notice\":\"Receives funds and assigns them to a project. The project should be in FUNDING, will fail otherwise. This function will mark the project as IN_PROGRESS if all the funding required is met, this will also give the budget for the first stage. If the amount sent is over the necessary amount, the rest will be sent back to the funder Will always emit a ProjectFunded event\"},\"fundsSent(uint256,address)\":{\"notice\":\"Mapping of funds sent from a funder to a project, indexed by projectId and address of the funder\"},\"nextId()\":{\"notice\":\"Id of the next project that will be created\"},\"projects(uint256)\":{\"notice\":\"Mapping of projects, indexed by projectId\"},\"setCompletedStage(uint256,uint256)\":{\"notice\":\"Sets a stage(and all of the previous) as completed. Can only be called by the reviewer and will send all of the funds corresponding to the past stages and the current (i.e. the latest stage that wasn't completed) that were not yet sent. Emits a StageCompleted event of the last completed stage(i.e. if stage 3 was marked as completed, implying that 2, 1 and 0 were completed too only one event will be emitted with the stage number 3) If all the stages are completed, the project changes its state to COMPLETED. Also, if this is the case a ProjectCompleted is emitted The project should be IN_PROGRESS, will fail otherwise\"},\"withdraw(uint256,uint256)\":{\"notice\":\"Withdraws the funds sent by the msg.sender for a given project The project should be canceled or in funding state, otherwise it will revert The user should have sent more or the same amount of funds meant to be withdrawn Emits event that the funds were withdrawn\"},\"withdrawAllFunds(uint256)\":{\"notice\":\"Withdraws ALL of the funds sent by the msg.sender for a given project The project should be canceled or in funding state, otherwise it will revert The user should have sent more or the same amount of funds meant to be withdrawn Emits event that the funds were withdrawn\"}},\"notice\":\"This contract allows you to track social tailored projects and release its funds according to the progress made\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Seedifyuba.sol\":\"Seedifyuba\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a >= b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow, so we distribute\\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\\n    }\\n}\\n\",\"keccak256\":\"0x363bd3b45201f07c9b71c2edc96533468cf14a3d029fabd82fddceb1eb3ebd9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/Seedifyuba.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.7.4;\\n\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/math/Math.sol\\\";\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\";\\n\\n/**\\n    @title Seedifyuba Contract\\n    @author Taller de programacion 2 - FIUBA - Ayudantes\\n    @notice This contract allows you to track social tailored projects\\n        and release its funds according to the progress made\\n    @dev This is an academic contract made for didactic purposes. DO NOT USE THIS IN PRODUCTION\\n */\\ncontract Seedifyuba is Ownable {\\n    using SafeMath for uint256;\\n\\n    /**\\n        @notice Event emitted when a project is created\\n        @param projectId Identifier of the newly created project\\n        @param owner Receiver of the funds once the project is in progress\\n        @param totalAmountNeeded Amount of funds needed to complete the project\\n    */\\n    event ProjectCreated(uint256 indexed projectId, address indexed owner, uint256 totalAmountNeeded);\\n\\n    /**\\n        @notice Event emitted when a project has received all reviwers.\\n        @param projectId Identifier of the funding project\\n    */\\n    event ProjectFunding(uint256 indexed projectId);\\n\\n    /**\\n        @notice Event emitted when a reviwer is added to the project\\n        @param projectId Identifier of the newly created project\\n        @param reviewer Address of the reviwer\\n    */\\n    event ReviwerAdded(uint256 indexed projectId, address indexed reviewer);\\n\\n    /**\\n        @notice Event emitted when a stage is completed in a project\\n        @param projectId Identifier of the project that progressed\\n        @param stageCompleted Index of the stage completed(indexed from 0)\\n    */\\n    event ReviewerVoted(uint256 indexed projectId, uint256 stageCompleted, address indexed funder);\\n\\n    /**\\n        @notice Event emitted when a stage is completed in a project\\n        @param projectId Identifier of the project that progressed\\n        @param stageCompleted Index of the stage completed(indexed from 0)\\n    */\\n    event StageCompleted(uint256 indexed projectId, uint256 stageCompleted);\\n\\n    /**\\n        @notice Event emitted when a user sends funds to a project\\n        @param projectId Identifier of the project that was funded\\n        @param funder Address that sent the funds\\n        @param funds Amount of funds sent\\n    */\\n    event ProjectFunded(uint256 indexed projectId, address indexed funder, uint256 funds);\\n\\n    /**\\n        @notice Event emitted when a project starts, i.e. all the necessary funds were received\\n        @param projectId Identifier of the project that started\\n    */\\n    event ProjectStarted(uint256 indexed projectId);\\n\\n    /**\\n        @notice Event emitted when a project completes, i.e. the last stage is completed\\n        @param projectId Identifier of the project that was completed\\n    */\\n    event ProjectCompleted(uint256 indexed projectId);\\n\\n    /**\\n        @notice Event emitted when a funder withdraws the funds sent to a project\\n        @param projectId Identifier of the project that had its funds withdrawn\\n        @param withdrawer Funder that withdraw its funds\\n        @param withdrawnFunds Amount of withdrawn funds\\n    */\\n    event FundsWithdrawn(uint256 indexed projectId, address indexed withdrawer, uint256 withdrawnFunds);\\n\\n    /**\\n        @notice  States that a a project can be in:\\n\\n\\n    */\\n\\n    enum State { FUNDING, CANCELED, IN_PROGRESS, COMPLETED, ON_REVIEW }\\n\\n    /**\\n        @notice Representation of a project.\\n        Project is the main entity that this contracts cares about\\n        It represents a social project where:\\n        -state is the State that the project is in\\n        - stagesCost is an array that holds the cost to complete each of the stages\\n        - currentStage represents the stage that the project is in,\\n            only representative if the project is IN_PROGRESS\\n        - user assigned to be the one that checks that the project\\n            has progressed\\n        - the owner of the project, address that will receive\\n            the funds of the project\\n        - missing amount to complete the funding,\\n            only relevant iff the project is in FUNDING state\\n     */\\n    struct Project {\\n        State state;\\n        uint256[] stagesCost;\\n        uint256 currentStage;\\n        address payable owner;\\n        uint256 missingAmount;\\n        address[3] reviewers;\\n        mapping(uint256 => mapping(address => bool)) stagesVotes;\\n    }\\n\\n    /**\\n        @notice Mapping of projects, indexed by projectId\\n     */\\n    mapping(uint256 => Project) public projects;\\n\\n    /**\\n        @notice Mapping of funds sent from a funder to a project,\\n        indexed by projectId and address of the funder\\n     */\\n    mapping(uint256 => mapping(address => uint256)) public fundsSent;\\n\\n    /**\\n        @notice Id of the next project that will be created\\n     */\\n    uint256 public nextId;\\n\\n    /**\\n        @notice Checks that the caller is the reviewer of the project, reverts otherwise\\n        @param projectId Identifier of the project that we are dealing with\\n    */\\n    modifier onlyReviewer(uint256 projectId) {\\n        bool exists = false;\\n        for (uint256 i = 0; i < projects[projectId].reviewers.length; i++) {\\n            if (msg.sender == projects[projectId].reviewers[i]) exists = true;\\n        }\\n        require(exists, \\\"not project reviewer\\\");\\n        _;\\n    }\\n\\n    /**\\n        @notice Checks that the project id belongs to a valid project, reverts otherwise\\n        @param projectId Potential project id\\n    */\\n    modifier projectExists(uint256 projectId) {\\n        require(projects[projectId].stagesCost.length > 0, \\\"project not created\\\");\\n        _;\\n    }\\n\\n    /**\\n        @notice Checks that the project is in the given state, reverts otherwise\\n        @param projectId Identifier of the project that we are checking\\n        @param requiredState The state that we are requiring the project to be in\\n    */\\n    modifier projectInState(uint256 projectId, State requiredState) {\\n        require(projects[projectId].state == requiredState, \\\"project not in necessary state\\\");\\n        _;\\n    }\\n\\n    /**\\n        @notice Verifies that the project is in the correct state(funding or canceled) to have\\n        its funds withdrawn\\n        @param projectId Identifier of the project to be checked\\n     */\\n    modifier canHaveFundsWithdrawn(uint256 projectId) {\\n        Project storage project = projects[projectId];\\n        require(project.state == State.CANCELED || project.state == State.FUNDING, \\\"project not in necessary state\\\");\\n        _;\\n    }\\n\\n    /**\\n        @notice Creates a new project with the given parameters,\\n            can only be called by the owner of the contract,\\n            so no ill-wicked projects are created\\n            Emits an ProjectCreated event\\n        @dev Creates and stores the project in the projects mapping,\\n            the for loops and the array makes the cost of this function\\n            to grow linearly with the input, though that does only affect\\n            this transaction and not any other.\\n            If you want to enable larger projects you should paginate this,\\n            not necessary ATM\\n        @param stagesCost Array that represents the cost of each stage of the project,\\n            must have a positive length and the sum of it will be the total\\n            cost of the project\\n        @param projectOwner The owner of the project,\\n            should be an address that is able to receive payments as it will\\n            receive the funds of the project\\n        @return Id that identifies the newly created project\\n    */\\n    function createProject(uint256[] calldata stagesCost, address payable projectOwner)\\n        external\\n        onlyOwner\\n        returns (uint256)\\n    {\\n        require(stagesCost.length > 0, \\\"No stages\\\");\\n\\n        uint256 projectId = nextId++;\\n\\n\\n        uint256 totalAmountNeeded = 0;\\n        for (uint256 i = 0; i < stagesCost.length; i++) totalAmountNeeded = totalAmountNeeded.add(stagesCost[i]);\\n\\n\\n        projects[projectId].state = State.ON_REVIEW;\\n        projects[projectId].stagesCost = stagesCost;\\n        projects[projectId].currentStage = 0;\\n        projects[projectId].owner = projectOwner;\\n        projects[projectId].missingAmount = totalAmountNeeded;\\n\\n        emit ProjectCreated(projectId, projectOwner, totalAmountNeeded);\\n        return projectId;\\n    }\\n\\n    /**\\n        @notice Adds a reviwer for an existing project,\\n            it can be called by anyone except project owner.\\n            Emits an ReviewerAdded event\\n        @dev Modifies reviewers array.\\n        @param projectId Id of the project\\n    */\\n    function addReviewer(uint256 projectId) public projectExists(projectId) projectInState(projectId, State.ON_REVIEW) {\\n        Project storage project = projects[projectId];\\n        require(project.owner != msg.sender, \\\"Owner cannot review own project\\\");\\n\\n        address[3] storage reviewers = project.reviewers;\\n\\n        uint256 i = 0;\\n        for (i; i < project.reviewers.length; i++) {\\n            require(project.reviewers[i] != msg.sender, \\\"Already reviewing this project\\\");\\n            if (project.reviewers[i] != address(0x0)) continue;\\n\\n            project.reviewers[i] = msg.sender;\\n\\n\\n            emit ReviwerAdded(projectId, msg.sender);\\n            break;\\n        }\\n        if (i + 1 < reviewers.length) return;\\n\\n        project.state = State.FUNDING;\\n        emit ProjectFunding(projectId);\\n    }\\n\\n    /**\\n        @notice Sets a stage(and all of the previous) as completed.\\n        Can only be called by the reviewer and will send all\\n        of the funds corresponding to the past stages and the current\\n        (i.e. the latest stage that wasn't completed)\\n        that were not yet sent.\\n        Emits a StageCompleted event of the last completed stage(i.e.\\n        if stage 3 was marked as completed, implying that 2, 1 and 0 were\\n        completed too only one event will be emitted with the stage number 3)\\n        If all the stages are completed, the project changes its state to\\n        COMPLETED. Also, if this is the case a ProjectCompleted is emitted\\n        The project should be IN_PROGRESS, will fail otherwise\\n        @dev If too many stages are completed in the same transaction, this\\n        could lead to a block gaslimit blockage. However this should not be\\n        a problem in most cases, but if it becomes a problem, sequential calls can\\n        be made to make the project progress in smaller steps\\n        @param projectId Should be an existing projectId, will revert otherwise\\n        @param completedStage Should be a stage number that was not considered\\n        completed and smaller or equal to the last stage index(indexed from 0)\\n\\n    */\\n    function setCompletedStage(uint256 projectId, uint256 completedStage)\\n        public\\n        projectExists(projectId)\\n        projectInState(projectId, State.IN_PROGRESS)\\n        onlyReviewer(projectId)\\n    {\\n        Project storage project = projects[projectId];\\n        require(project.currentStage <= completedStage, \\\"previous stage\\\");\\n        require(completedStage <= project.stagesCost.length - 1, \\\"stage out of bounds\\\");\\n\\n        require(project.stagesVotes[completedStage][msg.sender] != true, \\\"User already voted\\\");\\n        project.stagesVotes[completedStage][msg.sender] = true;\\n\\n        emit ReviewerVoted(projectId, completedStage, msg.sender);\\n\\n        for (uint256 i = 0; i < project.reviewers.length; i++) {\\n            if (!project.stagesVotes[completedStage][project.reviewers[i]]) return;\\n        }\\n\\n        uint256 previousStage = project.currentStage;\\n        project.currentStage = completedStage + 1;\\n        emit StageCompleted(projectId, completedStage);\\n\\n        _sendFunds(projectId, previousStage + 1, Math.min(completedStage + 1, project.stagesCost.length - 1));\\n        if (project.currentStage == project.stagesCost.length) {\\n            emit ProjectCompleted(projectId);\\n            project.state = State.COMPLETED;\\n        }\\n    }\\n\\n    /**\\n        @notice Receives funds and assigns them to a project.\\n        The project should be in FUNDING, will fail otherwise.\\n        This function will mark the project as IN_PROGRESS if all the\\n        funding required is met, this will also give the budget for the\\n        first stage. If the amount sent is over the necessary amount,\\n        the rest will be sent back to the funder\\n        Will always emit a ProjectFunded event\\n        @param projectId Should be an existing projectId, will revert otherwise\\n    */\\n    function fund(uint256 projectId) public payable projectExists(projectId) projectInState(projectId, State.FUNDING) {\\n        require(msg.value > 0, \\\"no value sent\\\");\\n        Project storage project = projects[projectId];\\n        require(project.stagesCost.length > 0, \\\"innexisting project\\\");\\n        require(project.state == State.FUNDING, \\\"not in funding state\\\");\\n        uint256 amountReceived = Math.min(msg.value, project.missingAmount);\\n        project.missingAmount = project.missingAmount.sub(amountReceived);\\n        fundsSent[projectId][msg.sender] = fundsSent[projectId][msg.sender].add(amountReceived);\\n        emit ProjectFunded(projectId, msg.sender, amountReceived);\\n        if (project.missingAmount == 0) {\\n            project.state = State.IN_PROGRESS;\\n            project.owner.transfer(project.stagesCost[0]);\\n            msg.sender.transfer(msg.value.sub(amountReceived)); // Return extra funds\\n            emit ProjectStarted(projectId);\\n        }\\n    }\\n\\n    /**\\n        @notice Withdraws the funds sent by the msg.sender for a given project\\n        The project should be canceled or in funding state, otherwise it will revert\\n        The user should have sent more or the same amount of funds meant to be withdrawn\\n\\n        Emits event that the funds were withdrawn\\n\\n        @param projectId Project that you want to withdraw the funds from\\n        @param fundsToWithdraw Amount of funds to withdrawn, should be greater than 0(reverts otherwise)\\n     */\\n    function withdraw(uint256 projectId, uint256 fundsToWithdraw)\\n        public\\n        projectExists(projectId)\\n        canHaveFundsWithdrawn(projectId)\\n    {\\n        require(fundsToWithdraw > 0, \\\"amount to withdraw should be greater than 0\\\");\\n        require(fundsSent[projectId][msg.sender] >= fundsToWithdraw, \\\"not enough funds\\\");\\n\\n        _withdrawFunds(projectId, fundsToWithdraw);\\n    }\\n\\n    /**\\n        @notice Withdraws ALL of the funds sent by the msg.sender for a given project\\n        The project should be canceled or in funding state, otherwise it will revert\\n        The user should have sent more or the same amount of funds meant to be withdrawn\\n\\n        Emits event that the funds were withdrawn\\n\\n        @param projectId Project that you want to withdraw the funds from\\n     */\\n    function withdrawAllFunds(uint256 projectId) public projectExists(projectId) canHaveFundsWithdrawn(projectId) {\\n        uint256 availableFunds = fundsSent[projectId][msg.sender];\\n        require(availableFunds > 0, \\\"no funds to withdraw\\\");\\n\\n        _withdrawFunds(projectId, availableFunds);\\n    }\\n\\n    /**\\n        @notice Withdraws the funds sent by the msg.sender for a given project\\n        Does not check anything, it just sends the funds, modifies the project and emits the event\\n\\n        @param projectId Project that you want to withdraw the funds from\\n        @param fundsToWithdraw Amount of funds to withdrawn, assumed to be checked in caller function\\n     */\\n    function _withdrawFunds(uint256 projectId, uint256 fundsToWithdraw) internal {\\n        uint256 availableFunds = fundsSent[projectId][msg.sender];\\n        fundsSent[projectId][msg.sender] = availableFunds.sub(fundsToWithdraw);\\n        projects[projectId].missingAmount = projects[projectId].missingAmount.add(fundsToWithdraw);\\n\\n        msg.sender.transfer(fundsToWithdraw);\\n\\n        emit FundsWithdrawn(projectId, msg.sender, fundsToWithdraw);\\n    }\\n\\n    /**\\n        @notice Sends the funds necessary to complete the specified stages\\n        No param is validity-checked. Should be done in caller functions\\n        @param projectId Should be an existing projectId\\n        @param fromStage Inclusive, first stage that the funds are given\\n        @param toStage Inclusive, last stage that the funds are given\\n    */\\n    function _sendFunds(\\n        uint256 projectId,\\n        uint256 fromStage,\\n        uint256 toStage\\n    ) internal {\\n        Project storage project = projects[projectId];\\n        uint256 funds = 0;\\n        for (uint256 i = fromStage; i <= toStage; i++) funds = funds.add(project.stagesCost[i]);\\n        project.owner.transfer(funds);\\n    }\\n}\\n\",\"keccak256\":\"0x19475e39db1b2aebffcc483aeee45a1679d235063508147eeda264faeb72fba2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6116d28061007d6000396000f3fe6080604052600436106100a75760003560e01c806361b8ce8c1161006457806361b8ce8c14610272578063715018a6146102875780638da5cb5b1461029c578063ca1d209d146102cd578063eb611d43146102ea578063f2fde38b14610314576100a7565b80630a3c538c146100ac578063107046bd146100f75780631905b2c314610160578063441a3e70146101e657806349b7fb4b146102185780634d70d38a14610248575b600080fd5b3480156100b857600080fd5b506100e5600480360360408110156100cf57600080fd5b50803590602001356001600160a01b0316610347565b60408051918252519081900360200190f35b34801561010357600080fd5b506101216004803603602081101561011a57600080fd5b5035610364565b6040518085600481111561013157fe5b8152602001848152602001836001600160a01b0316815260200182815260200194505050505060405180910390f35b34801561016c57600080fd5b506100e56004803603604081101561018357600080fd5b81019060208101813564010000000081111561019e57600080fd5b8201836020820111156101b057600080fd5b803590602001918460208302840111640100000000831117156101d257600080fd5b9193509150356001600160a01b031661039b565b3480156101f257600080fd5b506102166004803603604081101561020957600080fd5b508035906020013561053a565b005b34801561022457600080fd5b506102166004803603604081101561023b57600080fd5b50803590602001356106c4565b34801561025457600080fd5b506102166004803603602081101561026b57600080fd5b5035610aa7565b34801561027e57600080fd5b506100e5610d32565b34801561029357600080fd5b50610216610d38565b3480156102a857600080fd5b506102b1610df6565b604080516001600160a01b039092168252519081900360200190f35b610216600480360360208110156102e357600080fd5b5035610e05565b3480156102f657600080fd5b506102166004803603602081101561030d57600080fd5b503561113a565b34801561032057600080fd5b506102166004803603602081101561033757600080fd5b50356001600160a01b0316611280565b600260209081526000928352604080842090915290825290205481565b600160205260009081526040902080546002820154600383015460049093015460ff9092169290916001600160a01b039091169084565b60006103a5611394565b6001600160a01b03166103b6610df6565b6001600160a01b031614610411576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b8261044f576040805162461bcd60e51b81526020600482015260096024820152684e6f2073746167657360b81b604482015290519081900360640190fd5b60038054600181019091556000805b858110156104955761048b87878381811061047557fe5b905060200201358361139890919063ffffffff16565b915060010161045e565b506000828152600160208190526040909120805460ff191660041781556104be910187876115cb565b50600082815260016020908152604080832060028101939093556003830180546001600160a01b0319166001600160a01b03891690811790915560049093018490558051848152905185927f1b9d0946c0a6f3b3a57782ad25a4553bd5bcf1f1a252068eafc757670aad573a928290030190a350949350505050565b600082815260016020819052604090912001548290610596576040805162461bcd60e51b81526020600482015260136024820152721c1c9bda9958dd081b9bdd0818dc99585d1959606a1b604482015290519081900360640190fd5b60008381526001602081905260409091208491815460ff1660048111156105b957fe5b14806105d457506000815460ff1660048111156105d257fe5b145b610613576040805162461bcd60e51b815260206004820152601e602482015260008051602061167d833981519152604482015290519081900360640190fd5b600084116106525760405162461bcd60e51b815260040180806020018281038252602b815260200180611652602b913960400191505060405180910390fd5b60008581526002602090815260408083203384529091529020548411156106b3576040805162461bcd60e51b815260206004820152601060248201526f6e6f7420656e6f7567682066756e647360801b604482015290519081900360640190fd5b6106bd85856113f9565b5050505050565b600082815260016020819052604090912001548290610720576040805162461bcd60e51b81526020600482015260136024820152721c1c9bda9958dd081b9bdd0818dc99585d1959606a1b604482015290519081900360640190fd5b8260028060008381526001602052604090205460ff16600481111561074157fe5b14610781576040805162461bcd60e51b815260206004820152601e602482015260008051602061167d833981519152604482015290519081900360640190fd5b846000805b6000839052600160205260038110156107d457600083815260016020526040902060050181600381106107b557fe5b01546001600160a01b03163314156107cc57600191505b600101610786565b508061081e576040805162461bcd60e51b81526020600482015260146024820152733737ba10383937b532b1ba103932bb34b2bbb2b960611b604482015290519081900360640190fd5b60008781526001602052604090206002810154871015610876576040805162461bcd60e51b815260206004820152600e60248201526d70726576696f757320737461676560901b604482015290519081900360640190fd5b6001810154600019018711156108c9576040805162461bcd60e51b81526020600482015260136024820152727374616765206f7574206f6620626f756e647360681b604482015290519081900360640190fd5b6000878152600882016020908152604080832033845290915290205460ff16151560011415610934576040805162461bcd60e51b8152602060048201526012602482015271155cd95c88185b1c9958591e481d9bdd195960721b604482015290519081900360640190fd5b600087815260088201602090815260408083203380855290835292819020805460ff1916600117905580518a815290518b927ffe0fcdb24eba915ce426c8f9eefaca1e9452ec764e863c8fdd6db03a3c096baa928290030190a360005b60038110156109ec5760008881526008830160205260408120906005840183600381106109ba57fe5b01546001600160a01b0316815260208101919091526040016000205460ff166109e4575050610a9e565b600101610991565b50600281018054600189019091556040805189815290518a917f38ca9a0cef5bad2d3e13b8a99a6077611bcf4631f4ddb0ae733a751179169c11919081900360200190a2610a548982600101610a4f8b60010160018760010180549050036114cd565b6114e3565b600182015460028301541415610a9b5760405189907f60d8df137e489b6216738e436244ca4700bd6d0c8371d3c8d9c80b54538111b990600090a2815460ff191660031782555b50505b50505050505050565b600081815260016020819052604090912001548190610b03576040805162461bcd60e51b81526020600482015260136024820152721c1c9bda9958dd081b9bdd0818dc99585d1959606a1b604482015290519081900360640190fd5b8160048060008381526001602052604090205460ff166004811115610b2457fe5b14610b64576040805162461bcd60e51b815260206004820152601e602482015260008051602061167d833981519152604482015290519081900360640190fd5b600084815260016020526040902060038101546001600160a01b0316331415610bd4576040805162461bcd60e51b815260206004820152601f60248201527f4f776e65722063616e6e6f7420726576696577206f776e2070726f6a65637400604482015290519081900360640190fd5b6005810160005b6003811015610ce15733600584018260038110610bf457fe5b01546001600160a01b03161415610c52576040805162461bcd60e51b815260206004820152601e60248201527f416c726561647920726576696577696e6720746869732070726f6a6563740000604482015290519081900360640190fd5b6000600584018260038110610c6357fe5b01546001600160a01b031614610c7857610cd9565b33836005018260038110610c8857fe5b0180546001600160a01b0319166001600160a01b0392909216919091179055604051339088907fa15d456a2385445949b8b844efe08d6e4a0783bca4f89a8e66c1a04bd41e232190600090a3610ce1565b600101610bdb565b6003816001011015610cf557505050610d2c565b825460ff1916835560405187907fbad91fb6e794dfb4253d90e3b585cc6f769b8635176e519d94059f53a305a20790600090a25050505b50505050565b60035481565b610d40611394565b6001600160a01b0316610d51610df6565b6001600160a01b031614610dac576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b600081815260016020819052604090912001548190610e61576040805162461bcd60e51b81526020600482015260136024820152721c1c9bda9958dd081b9bdd0818dc99585d1959606a1b604482015290519081900360640190fd5b8160008060008381526001602052604090205460ff166004811115610e8257fe5b14610ec2576040805162461bcd60e51b815260206004820152601e602482015260008051602061167d833981519152604482015290519081900360640190fd5b60003411610f07576040805162461bcd60e51b815260206004820152600d60248201526c1b9bc81d985b1d59481cd95b9d609a1b604482015290519081900360640190fd5b600084815260016020819052604090912090810154610f63576040805162461bcd60e51b81526020600482015260136024820152721a5b9b995e1a5cdd1a5b99c81c1c9bda9958dd606a1b604482015290519081900360640190fd5b6000815460ff166004811115610f7557fe5b14610fbe576040805162461bcd60e51b81526020600482015260146024820152736e6f7420696e2066756e64696e6720737461746560601b604482015290519081900360640190fd5b6000610fce3483600401546114cd565b6004830154909150610fe0908261156e565b600483015560008681526002602090815260408083203384529091529020546110099082611398565b600087815260026020908152604080832033808552908352928190209390935582518481529251919289927f6251418ffd7f504740544ec3d578897633e212c5d658b7dce793c5dc9d2e855e929181900390910190a3600482015461113257815460ff1916600217825560038201546001830180546001600160a01b03909216916108fc919060009061109857fe5b90600052602060002001549081150290604051600060405180830381858888f193505050501580156110ce573d6000803e3d6000fd5b50336108fc6110dd348461156e565b6040518115909202916000818181858888f19350505050158015611105573d6000803e3d6000fd5b5060405186907fc6103cc0479d202218c64bbfa4df30c34a1f97e64c85a5a441103a0766241e6690600090a25b505050505050565b600081815260016020819052604090912001548190611196576040805162461bcd60e51b81526020600482015260136024820152721c1c9bda9958dd081b9bdd0818dc99585d1959606a1b604482015290519081900360640190fd5b60008281526001602081905260409091208391815460ff1660048111156111b957fe5b14806111d457506000815460ff1660048111156111d257fe5b145b611213576040805162461bcd60e51b815260206004820152601e602482015260008051602061167d833981519152604482015290519081900360640190fd5b600084815260026020908152604080832033845290915290205480611276576040805162461bcd60e51b81526020600482015260146024820152736e6f2066756e647320746f20776974686472617760601b604482015290519081900360640190fd5b6106bd85826113f9565b611288611394565b6001600160a01b0316611299610df6565b6001600160a01b0316146112f4576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166113395760405162461bcd60e51b815260040180806020018281038252602681526020018061162c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6000828201838110156113f2576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600082815260026020908152604080832033845290915290205461141d818361156e565b60008481526002602090815260408083203384528252808320939093558582526001905220600401546114509083611398565b600084815260016020526040808220600401929092559051339184156108fc02918591818181858888f19350505050158015611490573d6000803e3d6000fd5b50604080518381529051339185917ff440aec6b52895984d061d622e6edeba6210f7c3e059be920663140c084560d79181900360200190a3505050565b60008183106114dc57816113f2565b5090919050565b600083815260016020526040812090835b8381116115315761152783600101828154811061150d57fe5b90600052602060002001548361139890919063ffffffff16565b91506001016114f4565b5060038201546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611132573d6000803e3d6000fd5b6000828211156115c5576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b828054828255906000526020600020908101928215611606579160200282015b828111156116065782358255916020019190600101906115eb565b50611612929150611616565b5090565b5b80821115611612576000815560010161161756fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373616d6f756e7420746f2077697468647261772073686f756c642062652067726561746572207468616e203070726f6a656374206e6f7420696e206e65636573736172792073746174650000a2646970667358221220926e6c358c384b99510c5ac053f2b1b44845963aa0ed9bc3fc6a6926fbb6687464736f6c63430007040033",
  "deployedBytecode": "0x6080604052600436106100a75760003560e01c806361b8ce8c1161006457806361b8ce8c14610272578063715018a6146102875780638da5cb5b1461029c578063ca1d209d146102cd578063eb611d43146102ea578063f2fde38b14610314576100a7565b80630a3c538c146100ac578063107046bd146100f75780631905b2c314610160578063441a3e70146101e657806349b7fb4b146102185780634d70d38a14610248575b600080fd5b3480156100b857600080fd5b506100e5600480360360408110156100cf57600080fd5b50803590602001356001600160a01b0316610347565b60408051918252519081900360200190f35b34801561010357600080fd5b506101216004803603602081101561011a57600080fd5b5035610364565b6040518085600481111561013157fe5b8152602001848152602001836001600160a01b0316815260200182815260200194505050505060405180910390f35b34801561016c57600080fd5b506100e56004803603604081101561018357600080fd5b81019060208101813564010000000081111561019e57600080fd5b8201836020820111156101b057600080fd5b803590602001918460208302840111640100000000831117156101d257600080fd5b9193509150356001600160a01b031661039b565b3480156101f257600080fd5b506102166004803603604081101561020957600080fd5b508035906020013561053a565b005b34801561022457600080fd5b506102166004803603604081101561023b57600080fd5b50803590602001356106c4565b34801561025457600080fd5b506102166004803603602081101561026b57600080fd5b5035610aa7565b34801561027e57600080fd5b506100e5610d32565b34801561029357600080fd5b50610216610d38565b3480156102a857600080fd5b506102b1610df6565b604080516001600160a01b039092168252519081900360200190f35b610216600480360360208110156102e357600080fd5b5035610e05565b3480156102f657600080fd5b506102166004803603602081101561030d57600080fd5b503561113a565b34801561032057600080fd5b506102166004803603602081101561033757600080fd5b50356001600160a01b0316611280565b600260209081526000928352604080842090915290825290205481565b600160205260009081526040902080546002820154600383015460049093015460ff9092169290916001600160a01b039091169084565b60006103a5611394565b6001600160a01b03166103b6610df6565b6001600160a01b031614610411576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b8261044f576040805162461bcd60e51b81526020600482015260096024820152684e6f2073746167657360b81b604482015290519081900360640190fd5b60038054600181019091556000805b858110156104955761048b87878381811061047557fe5b905060200201358361139890919063ffffffff16565b915060010161045e565b506000828152600160208190526040909120805460ff191660041781556104be910187876115cb565b50600082815260016020908152604080832060028101939093556003830180546001600160a01b0319166001600160a01b03891690811790915560049093018490558051848152905185927f1b9d0946c0a6f3b3a57782ad25a4553bd5bcf1f1a252068eafc757670aad573a928290030190a350949350505050565b600082815260016020819052604090912001548290610596576040805162461bcd60e51b81526020600482015260136024820152721c1c9bda9958dd081b9bdd0818dc99585d1959606a1b604482015290519081900360640190fd5b60008381526001602081905260409091208491815460ff1660048111156105b957fe5b14806105d457506000815460ff1660048111156105d257fe5b145b610613576040805162461bcd60e51b815260206004820152601e602482015260008051602061167d833981519152604482015290519081900360640190fd5b600084116106525760405162461bcd60e51b815260040180806020018281038252602b815260200180611652602b913960400191505060405180910390fd5b60008581526002602090815260408083203384529091529020548411156106b3576040805162461bcd60e51b815260206004820152601060248201526f6e6f7420656e6f7567682066756e647360801b604482015290519081900360640190fd5b6106bd85856113f9565b5050505050565b600082815260016020819052604090912001548290610720576040805162461bcd60e51b81526020600482015260136024820152721c1c9bda9958dd081b9bdd0818dc99585d1959606a1b604482015290519081900360640190fd5b8260028060008381526001602052604090205460ff16600481111561074157fe5b14610781576040805162461bcd60e51b815260206004820152601e602482015260008051602061167d833981519152604482015290519081900360640190fd5b846000805b6000839052600160205260038110156107d457600083815260016020526040902060050181600381106107b557fe5b01546001600160a01b03163314156107cc57600191505b600101610786565b508061081e576040805162461bcd60e51b81526020600482015260146024820152733737ba10383937b532b1ba103932bb34b2bbb2b960611b604482015290519081900360640190fd5b60008781526001602052604090206002810154871015610876576040805162461bcd60e51b815260206004820152600e60248201526d70726576696f757320737461676560901b604482015290519081900360640190fd5b6001810154600019018711156108c9576040805162461bcd60e51b81526020600482015260136024820152727374616765206f7574206f6620626f756e647360681b604482015290519081900360640190fd5b6000878152600882016020908152604080832033845290915290205460ff16151560011415610934576040805162461bcd60e51b8152602060048201526012602482015271155cd95c88185b1c9958591e481d9bdd195960721b604482015290519081900360640190fd5b600087815260088201602090815260408083203380855290835292819020805460ff1916600117905580518a815290518b927ffe0fcdb24eba915ce426c8f9eefaca1e9452ec764e863c8fdd6db03a3c096baa928290030190a360005b60038110156109ec5760008881526008830160205260408120906005840183600381106109ba57fe5b01546001600160a01b0316815260208101919091526040016000205460ff166109e4575050610a9e565b600101610991565b50600281018054600189019091556040805189815290518a917f38ca9a0cef5bad2d3e13b8a99a6077611bcf4631f4ddb0ae733a751179169c11919081900360200190a2610a548982600101610a4f8b60010160018760010180549050036114cd565b6114e3565b600182015460028301541415610a9b5760405189907f60d8df137e489b6216738e436244ca4700bd6d0c8371d3c8d9c80b54538111b990600090a2815460ff191660031782555b50505b50505050505050565b600081815260016020819052604090912001548190610b03576040805162461bcd60e51b81526020600482015260136024820152721c1c9bda9958dd081b9bdd0818dc99585d1959606a1b604482015290519081900360640190fd5b8160048060008381526001602052604090205460ff166004811115610b2457fe5b14610b64576040805162461bcd60e51b815260206004820152601e602482015260008051602061167d833981519152604482015290519081900360640190fd5b600084815260016020526040902060038101546001600160a01b0316331415610bd4576040805162461bcd60e51b815260206004820152601f60248201527f4f776e65722063616e6e6f7420726576696577206f776e2070726f6a65637400604482015290519081900360640190fd5b6005810160005b6003811015610ce15733600584018260038110610bf457fe5b01546001600160a01b03161415610c52576040805162461bcd60e51b815260206004820152601e60248201527f416c726561647920726576696577696e6720746869732070726f6a6563740000604482015290519081900360640190fd5b6000600584018260038110610c6357fe5b01546001600160a01b031614610c7857610cd9565b33836005018260038110610c8857fe5b0180546001600160a01b0319166001600160a01b0392909216919091179055604051339088907fa15d456a2385445949b8b844efe08d6e4a0783bca4f89a8e66c1a04bd41e232190600090a3610ce1565b600101610bdb565b6003816001011015610cf557505050610d2c565b825460ff1916835560405187907fbad91fb6e794dfb4253d90e3b585cc6f769b8635176e519d94059f53a305a20790600090a25050505b50505050565b60035481565b610d40611394565b6001600160a01b0316610d51610df6565b6001600160a01b031614610dac576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b600081815260016020819052604090912001548190610e61576040805162461bcd60e51b81526020600482015260136024820152721c1c9bda9958dd081b9bdd0818dc99585d1959606a1b604482015290519081900360640190fd5b8160008060008381526001602052604090205460ff166004811115610e8257fe5b14610ec2576040805162461bcd60e51b815260206004820152601e602482015260008051602061167d833981519152604482015290519081900360640190fd5b60003411610f07576040805162461bcd60e51b815260206004820152600d60248201526c1b9bc81d985b1d59481cd95b9d609a1b604482015290519081900360640190fd5b600084815260016020819052604090912090810154610f63576040805162461bcd60e51b81526020600482015260136024820152721a5b9b995e1a5cdd1a5b99c81c1c9bda9958dd606a1b604482015290519081900360640190fd5b6000815460ff166004811115610f7557fe5b14610fbe576040805162461bcd60e51b81526020600482015260146024820152736e6f7420696e2066756e64696e6720737461746560601b604482015290519081900360640190fd5b6000610fce3483600401546114cd565b6004830154909150610fe0908261156e565b600483015560008681526002602090815260408083203384529091529020546110099082611398565b600087815260026020908152604080832033808552908352928190209390935582518481529251919289927f6251418ffd7f504740544ec3d578897633e212c5d658b7dce793c5dc9d2e855e929181900390910190a3600482015461113257815460ff1916600217825560038201546001830180546001600160a01b03909216916108fc919060009061109857fe5b90600052602060002001549081150290604051600060405180830381858888f193505050501580156110ce573d6000803e3d6000fd5b50336108fc6110dd348461156e565b6040518115909202916000818181858888f19350505050158015611105573d6000803e3d6000fd5b5060405186907fc6103cc0479d202218c64bbfa4df30c34a1f97e64c85a5a441103a0766241e6690600090a25b505050505050565b600081815260016020819052604090912001548190611196576040805162461bcd60e51b81526020600482015260136024820152721c1c9bda9958dd081b9bdd0818dc99585d1959606a1b604482015290519081900360640190fd5b60008281526001602081905260409091208391815460ff1660048111156111b957fe5b14806111d457506000815460ff1660048111156111d257fe5b145b611213576040805162461bcd60e51b815260206004820152601e602482015260008051602061167d833981519152604482015290519081900360640190fd5b600084815260026020908152604080832033845290915290205480611276576040805162461bcd60e51b81526020600482015260146024820152736e6f2066756e647320746f20776974686472617760601b604482015290519081900360640190fd5b6106bd85826113f9565b611288611394565b6001600160a01b0316611299610df6565b6001600160a01b0316146112f4576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166113395760405162461bcd60e51b815260040180806020018281038252602681526020018061162c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6000828201838110156113f2576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600082815260026020908152604080832033845290915290205461141d818361156e565b60008481526002602090815260408083203384528252808320939093558582526001905220600401546114509083611398565b600084815260016020526040808220600401929092559051339184156108fc02918591818181858888f19350505050158015611490573d6000803e3d6000fd5b50604080518381529051339185917ff440aec6b52895984d061d622e6edeba6210f7c3e059be920663140c084560d79181900360200190a3505050565b60008183106114dc57816113f2565b5090919050565b600083815260016020526040812090835b8381116115315761152783600101828154811061150d57fe5b90600052602060002001548361139890919063ffffffff16565b91506001016114f4565b5060038201546040516001600160a01b039091169082156108fc029083906000818181858888f19350505050158015611132573d6000803e3d6000fd5b6000828211156115c5576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b828054828255906000526020600020908101928215611606579160200282015b828111156116065782358255916020019190600101906115eb565b50611612929150611616565b5090565b5b80821115611612576000815560010161161756fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373616d6f756e7420746f2077697468647261772073686f756c642062652067726561746572207468616e203070726f6a656374206e6f7420696e206e65636573736172792073746174650000a2646970667358221220926e6c358c384b99510c5ac053f2b1b44845963aa0ed9bc3fc6a6926fbb6687464736f6c63430007040033",
  "devdoc": {
    "author": "Taller de programacion 2 - FIUBA - Ayudantes",
    "details": "This is an academic contract made for didactic purposes. DO NOT USE THIS IN PRODUCTION",
    "events": {
      "FundsWithdrawn(uint256,address,uint256)": {
        "params": {
          "projectId": "Identifier of the project that had its funds withdrawn",
          "withdrawer": "Funder that withdraw its funds",
          "withdrawnFunds": "Amount of withdrawn funds"
        }
      },
      "ProjectCompleted(uint256)": {
        "params": {
          "projectId": "Identifier of the project that was completed"
        }
      },
      "ProjectCreated(uint256,address,uint256)": {
        "params": {
          "owner": "Receiver of the funds once the project is in progress",
          "projectId": "Identifier of the newly created project",
          "totalAmountNeeded": "Amount of funds needed to complete the project"
        }
      },
      "ProjectFunded(uint256,address,uint256)": {
        "params": {
          "funder": "Address that sent the funds",
          "funds": "Amount of funds sent",
          "projectId": "Identifier of the project that was funded"
        }
      },
      "ProjectFunding(uint256)": {
        "params": {
          "projectId": "Identifier of the funding project"
        }
      },
      "ProjectStarted(uint256)": {
        "params": {
          "projectId": "Identifier of the project that started"
        }
      },
      "ReviewerVoted(uint256,uint256,address)": {
        "params": {
          "projectId": "Identifier of the project that progressed",
          "stageCompleted": "Index of the stage completed(indexed from 0)"
        }
      },
      "ReviwerAdded(uint256,address)": {
        "params": {
          "projectId": "Identifier of the newly created project",
          "reviewer": "Address of the reviwer"
        }
      },
      "StageCompleted(uint256,uint256)": {
        "params": {
          "projectId": "Identifier of the project that progressed",
          "stageCompleted": "Index of the stage completed(indexed from 0)"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "addReviewer(uint256)": {
        "details": "Modifies reviewers array.",
        "params": {
          "projectId": "Id of the project"
        }
      },
      "createProject(uint256[],address)": {
        "details": "Creates and stores the project in the projects mapping, the for loops and the array makes the cost of this function to grow linearly with the input, though that does only affect this transaction and not any other. If you want to enable larger projects you should paginate this, not necessary ATM",
        "params": {
          "projectOwner": "The owner of the project, should be an address that is able to receive payments as it will receive the funds of the project",
          "stagesCost": "Array that represents the cost of each stage of the project, must have a positive length and the sum of it will be the total cost of the project"
        },
        "returns": {
          "_0": "Id that identifies the newly created project"
        }
      },
      "fund(uint256)": {
        "params": {
          "projectId": "Should be an existing projectId, will revert otherwise"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setCompletedStage(uint256,uint256)": {
        "details": "If too many stages are completed in the same transaction, this could lead to a block gaslimit blockage. However this should not be a problem in most cases, but if it becomes a problem, sequential calls can be made to make the project progress in smaller steps",
        "params": {
          "completedStage": "Should be a stage number that was not considered completed and smaller or equal to the last stage index(indexed from 0)",
          "projectId": "Should be an existing projectId, will revert otherwise"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256,uint256)": {
        "params": {
          "fundsToWithdraw": "Amount of funds to withdrawn, should be greater than 0(reverts otherwise)",
          "projectId": "Project that you want to withdraw the funds from"
        }
      },
      "withdrawAllFunds(uint256)": {
        "params": {
          "projectId": "Project that you want to withdraw the funds from"
        }
      }
    },
    "title": "Seedifyuba Contract",
    "version": 1
  },
  "userdoc": {
    "events": {
      "FundsWithdrawn(uint256,address,uint256)": {
        "notice": "Event emitted when a funder withdraws the funds sent to a project"
      },
      "ProjectCompleted(uint256)": {
        "notice": "Event emitted when a project completes, i.e. the last stage is completed"
      },
      "ProjectCreated(uint256,address,uint256)": {
        "notice": "Event emitted when a project is created"
      },
      "ProjectFunded(uint256,address,uint256)": {
        "notice": "Event emitted when a user sends funds to a project"
      },
      "ProjectFunding(uint256)": {
        "notice": "Event emitted when a project has received all reviwers."
      },
      "ProjectStarted(uint256)": {
        "notice": "Event emitted when a project starts, i.e. all the necessary funds were received"
      },
      "ReviewerVoted(uint256,uint256,address)": {
        "notice": "Event emitted when a stage is completed in a project"
      },
      "ReviwerAdded(uint256,address)": {
        "notice": "Event emitted when a reviwer is added to the project"
      },
      "StageCompleted(uint256,uint256)": {
        "notice": "Event emitted when a stage is completed in a project"
      }
    },
    "kind": "user",
    "methods": {
      "addReviewer(uint256)": {
        "notice": "Adds a reviwer for an existing project, it can be called by anyone except project owner. Emits an ReviewerAdded event"
      },
      "createProject(uint256[],address)": {
        "notice": "Creates a new project with the given parameters, can only be called by the owner of the contract, so no ill-wicked projects are created Emits an ProjectCreated event"
      },
      "fund(uint256)": {
        "notice": "Receives funds and assigns them to a project. The project should be in FUNDING, will fail otherwise. This function will mark the project as IN_PROGRESS if all the funding required is met, this will also give the budget for the first stage. If the amount sent is over the necessary amount, the rest will be sent back to the funder Will always emit a ProjectFunded event"
      },
      "fundsSent(uint256,address)": {
        "notice": "Mapping of funds sent from a funder to a project, indexed by projectId and address of the funder"
      },
      "nextId()": {
        "notice": "Id of the next project that will be created"
      },
      "projects(uint256)": {
        "notice": "Mapping of projects, indexed by projectId"
      },
      "setCompletedStage(uint256,uint256)": {
        "notice": "Sets a stage(and all of the previous) as completed. Can only be called by the reviewer and will send all of the funds corresponding to the past stages and the current (i.e. the latest stage that wasn't completed) that were not yet sent. Emits a StageCompleted event of the last completed stage(i.e. if stage 3 was marked as completed, implying that 2, 1 and 0 were completed too only one event will be emitted with the stage number 3) If all the stages are completed, the project changes its state to COMPLETED. Also, if this is the case a ProjectCompleted is emitted The project should be IN_PROGRESS, will fail otherwise"
      },
      "withdraw(uint256,uint256)": {
        "notice": "Withdraws the funds sent by the msg.sender for a given project The project should be canceled or in funding state, otherwise it will revert The user should have sent more or the same amount of funds meant to be withdrawn Emits event that the funds were withdrawn"
      },
      "withdrawAllFunds(uint256)": {
        "notice": "Withdraws ALL of the funds sent by the msg.sender for a given project The project should be canceled or in funding state, otherwise it will revert The user should have sent more or the same amount of funds meant to be withdrawn Emits event that the funds were withdrawn"
      }
    },
    "notice": "This contract allows you to track social tailored projects and release its funds according to the progress made",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Seedifyuba.sol:Seedifyuba",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 669,
        "contract": "contracts/Seedifyuba.sol:Seedifyuba",
        "label": "projects",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Project)664_storage)"
      },
      {
        "astId": 676,
        "contract": "contracts/Seedifyuba.sol:Seedifyuba",
        "label": "fundsSent",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 679,
        "contract": "contracts/Seedifyuba.sol:Seedifyuba",
        "label": "nextId",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)3_storage": {
        "base": "t_address",
        "encoding": "inplace",
        "label": "address[3]",
        "numberOfBytes": "96"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(State)642": {
        "encoding": "inplace",
        "label": "enum Seedifyuba.State",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_uint256,t_struct(Project)664_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Seedifyuba.Project)",
        "numberOfBytes": "32",
        "value": "t_struct(Project)664_storage"
      },
      "t_struct(Project)664_storage": {
        "encoding": "inplace",
        "label": "struct Seedifyuba.Project",
        "members": [
          {
            "astId": 644,
            "contract": "contracts/Seedifyuba.sol:Seedifyuba",
            "label": "state",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(State)642"
          },
          {
            "astId": 647,
            "contract": "contracts/Seedifyuba.sol:Seedifyuba",
            "label": "stagesCost",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 649,
            "contract": "contracts/Seedifyuba.sol:Seedifyuba",
            "label": "currentStage",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 651,
            "contract": "contracts/Seedifyuba.sol:Seedifyuba",
            "label": "owner",
            "offset": 0,
            "slot": "3",
            "type": "t_address_payable"
          },
          {
            "astId": 653,
            "contract": "contracts/Seedifyuba.sol:Seedifyuba",
            "label": "missingAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 657,
            "contract": "contracts/Seedifyuba.sol:Seedifyuba",
            "label": "reviewers",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)3_storage"
          },
          {
            "astId": 663,
            "contract": "contracts/Seedifyuba.sol:Seedifyuba",
            "label": "stagesVotes",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}